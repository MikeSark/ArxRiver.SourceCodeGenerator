name: NUKE Build for .NET Standard 2.0 and .NET 8.0

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        framework: ['net9.0'] # Test both target frameworks

    steps:
    # Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Install .NET SDKs
    - name: Setup .NET SDKs
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          2.1.x    # For .NET Standard 2.0 compatibility
          9.0.x    # .NET 9.0 SDK (latest preview)

    # Step 2: Setup .NET SDK
    #- name: Setup .NET
    #  uses: actions/setup-dotnet@v3
    #  with:
    #    dotnet-version: '9.0' # Install .NET 8 SDK (backward compatible with .NET Standard)

    # Step 4: Restore dependencies 
    #- name: Restore solution dependencies
    #  run: dotnet restore src/ArxRiver.SourceGenerator/ArxRiver.SourceGenerators.csproj

    # Step 5: Install NUKE Global Tool
    - name: Install NUKE Global Tool
      shell: pwsh
      run: dotnet tool install --global Nuke.GlobalTool

    # Step 6: Add NUKE to PATH
    - name: Add NUKE to PATH
      shell: pwsh
      run: echo "C:\\Users\\runneradmin\\.dotnet\\tools" >> $GITHUB_PATH    

    # Step 7: Run NUKE Build
    - name: Run NUKE Build for ${{ matrix.framework }}
      shell: pwsh
      run: nuke --target Default --framework ${{ matrix.framework }}

    # Step 8 (Optional): Upload Build Artifacts
    #- name: Upload Build Artifacts
    #  if: success()
    #  uses: actions/upload-artifact@v3
    #  with:
    #    name: build-output-${{ matrix.framework }}
    #    path: output # Adjust this to your NUKE build output directory

    # List the contents of the working directory
    #- name: List directory contents
    #  run: ls -la

    # Step 9 Publish the package to GitHub Packages
    #- name: Publish NuGet package
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #    SOURCE_FOLDER: ${{ github.workspace }}/src/ArxRiver.SourceGenerator/bin/Release}}
    #  run: dotnet nuget push ./nupkg/*.nupkg --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" --api-key $GITHUB_TOKEN
